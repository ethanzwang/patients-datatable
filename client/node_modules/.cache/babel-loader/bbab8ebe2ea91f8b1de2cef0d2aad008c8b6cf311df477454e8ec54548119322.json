{"ast":null,"code":"var _jsxFileName = \"/Users/ethanwang/patient-database/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport $ from 'jquery';\nimport DataTable from 'datatables.net-dt';\nimport './App.css';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [excelData, setExcelData] = useState([]);\n  useEffect(() => {\n    if (excelData.length > 0) {\n      const table = new DataTable('#example');\n      return () => {\n        table.destroy();\n      };\n    }\n  }, [excelData]);\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = event => {\n      const data = new Uint8Array(event.target.result);\n      const workbook = XLSX.read(data, {\n        type: 'array'\n      });\n      const sheetName = workbook.SheetName[0];\n      const sheet = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName], {\n        header: 1\n      });\n      setExcelData(sheet);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://cdn.datatables.net/2.1.5/css/dataTables.dataTables.css\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n      src: \"https://cdn.datatables.net/2.1.5/js/dataTables.js\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Patient DataTable\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".xlsx, .xls\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), excelData.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"example\",\n      class: \"display\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: excelData[0].map((header, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: excelData.slice(1).map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: cell\n          }, cellIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 19\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"6Oygbo6GsHQbsJHuCr1meEFuH8s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","$","DataTable","XLSX","jsxDEV","_jsxDEV","App","_s","excelData","setExcelData","length","table","destroy","handleFileUpload","e","file","target","files","reader","FileReader","onload","event","data","Uint8Array","result","workbook","read","type","sheetName","SheetName","sheet","utils","sheet_to_json","Sheets","header","readAsArrayBuffer","className","children","rel","href","fileName","_jsxFileName","lineNumber","columnNumber","src","accept","onChange","id","class","map","index","slice","row","rowIndex","cell","cellIndex","_c","$RefreshReg$"],"sources":["/Users/ethanwang/patient-database/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport $ from 'jquery';\nimport DataTable from 'datatables.net-dt';\nimport './App.css';\nimport * as XLSX from 'xlsx';\n\nconst App = () => {\n  const [excelData, setExcelData] = useState([]);\n\n  useEffect(() => {\n    if (excelData.length > 0) {\n      const table = new DataTable('#example');\n      return () => {\n        table.destroy();\n      };\n    }\n  }, [excelData]);\n  \n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = (event) => {\n      const data = new Uint8Array(event.target.result);\n      const workbook = XLSX.read(data, { type: 'array' });\n\n      const sheetName = workbook.SheetName[0];\n      const sheet = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName], { header: 1 });\n\n      setExcelData(sheet);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  return (\n    <div className=\"container\">\n      <link rel=\"stylesheet\" href=\"https://cdn.datatables.net/2.1.5/css/dataTables.dataTables.css\" />\n      <script src=\"https://cdn.datatables.net/2.1.5/js/dataTables.js\"></script>\n      <h1>Patient DataTable</h1>\n      <input type=\"file\" accept=\".xlsx, .xls\" onChange={handleFileUpload} />\n      {excelData.length > 0 && (\n        <table id=\"example\" class=\"display\">\n          <thead>\n            <tr>\n              {excelData[0].map((header, index) => (\n                <th key={index}>{header}</th>\n              ))}\n              </tr>\n          </thead>\n          <tbody>\n            {excelData.slice(1).map((row, rowIndex) => (\n              <tr key={rowIndex}>\n                {row.map((cell, cellIndex) => (\n                  <td key={cellIndex}>{cell}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}