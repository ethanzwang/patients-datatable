{"ast":null,"code":"import $ from 'jquery';\nexport const handleEditRow = table => {\n  $('#example').on('click', 'tbody tr', function () {\n    const $row = $(this); // Store the clicked row\n    const rowData = table.row($row).data(); // Get the row's current data\n\n    // If row is already in edit mode, return to avoid double clicks\n    if ($row.hasClass('editing')) return;\n\n    // Set the row to edit mode by adding an 'editing' class\n    $row.addClass('editing');\n\n    // Replace each cell's content with an input field pre-filled with the current value\n    $row.find('td').each(function (index) {\n      $(this).html(`<input type=\"text\" value=\"${rowData[index]}\">`);\n    });\n\n    // Add Save and Cancel buttons to the row\n    $row.append(`\n          <td>\n            <button class=\"save-btn\">Save</button>\n            <button class=\"cancel-btn\">Cancel</button>\n          </td>\n        `);\n\n    // Handle Save button click\n    $row.find('.save-btn').on('click', function () {\n      const newData = [];\n      $row.find('td input').each(function () {\n        newData.push($(this).val()); // Collect the new values from input fields\n      });\n\n      // Update the table row with new data\n      table.row($row).data(newData).draw(false);\n      $row.removeClass('editing'); // Remove the 'editing' class\n    });\n\n    // Handle Cancel button click\n    $row.find('.cancel-btn').on('click', function () {\n      // Restore original row data and remove the 'editing' class\n      table.row($row).data(rowData).draw(false);\n      $row.removeClass('editing');\n    });\n  });\n};","map":{"version":3,"names":["$","handleEditRow","table","on","$row","rowData","row","data","hasClass","addClass","find","each","index","html","append","newData","push","val","draw","removeClass"],"sources":["/Users/ethanzwang/Desktop/patients-datatable/client/src/components/editRow.js"],"sourcesContent":["import $ from 'jquery';\n\nexport const handleEditRow = (table) => {\n    $('#example').on('click', 'tbody tr', function () {\n        const $row = $(this); // Store the clicked row\n        const rowData = table.row($row).data(); // Get the row's current data\n    \n        // If row is already in edit mode, return to avoid double clicks\n        if ($row.hasClass('editing')) return;\n    \n        // Set the row to edit mode by adding an 'editing' class\n        $row.addClass('editing');\n    \n        // Replace each cell's content with an input field pre-filled with the current value\n        $row.find('td').each(function (index) {\n          $(this).html(`<input type=\"text\" value=\"${rowData[index]}\">`);\n        });\n    \n        // Add Save and Cancel buttons to the row\n        $row.append(`\n          <td>\n            <button class=\"save-btn\">Save</button>\n            <button class=\"cancel-btn\">Cancel</button>\n          </td>\n        `);\n    \n        // Handle Save button click\n        $row.find('.save-btn').on('click', function () {\n          const newData = [];\n          $row.find('td input').each(function () {\n            newData.push($(this).val()); // Collect the new values from input fields\n          });\n    \n          // Update the table row with new data\n          table.row($row).data(newData).draw(false);\n          $row.removeClass('editing'); // Remove the 'editing' class\n        });\n    \n        // Handle Cancel button click\n        $row.find('.cancel-btn').on('click', function () {\n          // Restore original row data and remove the 'editing' class\n          table.row($row).data(rowData).draw(false);\n          $row.removeClass('editing');\n        });\n    });\n};"],"mappings":"AAAA,OAAOA,CAAC,MAAM,QAAQ;AAEtB,OAAO,MAAMC,aAAa,GAAIC,KAAK,IAAK;EACpCF,CAAC,CAAC,UAAU,CAAC,CAACG,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,YAAY;IAC9C,MAAMC,IAAI,GAAGJ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACtB,MAAMK,OAAO,GAAGH,KAAK,CAACI,GAAG,CAACF,IAAI,CAAC,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;;IAExC;IACA,IAAIH,IAAI,CAACI,QAAQ,CAAC,SAAS,CAAC,EAAE;;IAE9B;IACAJ,IAAI,CAACK,QAAQ,CAAC,SAAS,CAAC;;IAExB;IACAL,IAAI,CAACM,IAAI,CAAC,IAAI,CAAC,CAACC,IAAI,CAAC,UAAUC,KAAK,EAAE;MACpCZ,CAAC,CAAC,IAAI,CAAC,CAACa,IAAI,CAAC,6BAA6BR,OAAO,CAACO,KAAK,CAAC,IAAI,CAAC;IAC/D,CAAC,CAAC;;IAEF;IACAR,IAAI,CAACU,MAAM,CAAC;AACpB;AACA;AACA;AACA;AACA,SAAS,CAAC;;IAEF;IACAV,IAAI,CAACM,IAAI,CAAC,WAAW,CAAC,CAACP,EAAE,CAAC,OAAO,EAAE,YAAY;MAC7C,MAAMY,OAAO,GAAG,EAAE;MAClBX,IAAI,CAACM,IAAI,CAAC,UAAU,CAAC,CAACC,IAAI,CAAC,YAAY;QACrCI,OAAO,CAACC,IAAI,CAAChB,CAAC,CAAC,IAAI,CAAC,CAACiB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MAC/B,CAAC,CAAC;;MAEF;MACAf,KAAK,CAACI,GAAG,CAACF,IAAI,CAAC,CAACG,IAAI,CAACQ,OAAO,CAAC,CAACG,IAAI,CAAC,KAAK,CAAC;MACzCd,IAAI,CAACe,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;;IAEF;IACAf,IAAI,CAACM,IAAI,CAAC,aAAa,CAAC,CAACP,EAAE,CAAC,OAAO,EAAE,YAAY;MAC/C;MACAD,KAAK,CAACI,GAAG,CAACF,IAAI,CAAC,CAACG,IAAI,CAACF,OAAO,CAAC,CAACa,IAAI,CAAC,KAAK,CAAC;MACzCd,IAAI,CAACe,WAAW,CAAC,SAAS,CAAC;IAC7B,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}