{"ast":null,"code":"var _jsxFileName = \"/Users/ethanwang/patient-database/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport $ from 'jquery';\nimport DataTable from 'datatables.net-dt';\nimport './App.css';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [excelData, setExcelData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  useEffect(() => {\n    if (excelData.length > 0) {\n      const table = new DataTable('#example');\n      return () => {\n        table.destroy();\n      };\n    }\n  }, [excelData]);\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = e => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, {\n        type: 'array'\n      });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet, {\n        defval: ''\n      });\n      setExcelData(jsonData);\n      if (jsonData.length > 0) {\n        const uniqueColumns = Object.keys(jsonData[0]);\n        setColumns(uniqueColumns);\n      }\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://cdn.datatables.net/2.1.5/css/dataTables.dataTables.css\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n      src: \"https://cdn.datatables.net/2.1.5/js/dataTables.js\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Patient DataTable\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".xlsx, .xls\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), excelData.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"example\",\n      class: \"display\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map((col, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: col\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: excelData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map((col, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[col]\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"U35+h4HvNqy+6GPk67IZk9kHOXk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","$","DataTable","XLSX","jsxDEV","_jsxDEV","App","_s","excelData","setExcelData","columns","setColumns","length","table","destroy","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","data","Uint8Array","result","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","defval","uniqueColumns","Object","keys","readAsArrayBuffer","className","children","rel","href","fileName","_jsxFileName","lineNumber","columnNumber","src","accept","onChange","id","class","map","col","index","row","rowIndex","colIndex","_c","$RefreshReg$"],"sources":["/Users/ethanwang/patient-database/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport $ from 'jquery';\nimport DataTable from 'datatables.net-dt';\nimport './App.css';\nimport * as XLSX from 'xlsx';\n\nconst App = () => {\n  const [excelData, setExcelData] = useState([]);\n  const [columns, setColumns] = useState([]);\n\n  useEffect(() => {\n    if (excelData.length > 0) {\n      const table = new DataTable('#example');\n      \n      return () => {\n        table.destroy();\n      };\n    }\n  }, [excelData]);\n  \n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    \n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, { type: 'array' });\n\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n\n      const jsonData = XLSX.utils.sheet_to_json(worksheet, { defval: '' });\n      setExcelData(jsonData);\n\n      if(jsonData.length > 0) {\n        const uniqueColumns = Object.keys(jsonData[0]);\n        setColumns(uniqueColumns);\n      }\n    };\n\n    reader.readAsArrayBuffer(file);\n  };\n\n  return (\n    <div className=\"container\">\n      <link rel=\"stylesheet\" href=\"https://cdn.datatables.net/2.1.5/css/dataTables.dataTables.css\" />\n      <script src=\"https://cdn.datatables.net/2.1.5/js/dataTables.js\"></script>\n      <h1>Patient DataTable</h1>\n      <input type=\"file\" accept=\".xlsx, .xls\" onChange={handleFileUpload} />\n      {excelData.length > 0 && (\n        <table id=\"example\" class=\"display\">\n          <thead>\n            <tr>\n              {columns.map((col, index) => (\n                <th key={index}>{col}</th>\n              ))}\n              </tr>\n          </thead>\n          <tbody>\n            {excelData.map((row, rowIndex) => (\n              <tr key={rowIndex}>\n                {columns.map((col, colIndex) => (\n                  <td key={colIndex}>{row[col]}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}