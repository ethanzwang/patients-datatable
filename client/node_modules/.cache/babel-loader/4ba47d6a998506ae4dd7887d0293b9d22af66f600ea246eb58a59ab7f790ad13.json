{"ast":null,"code":"var _jsxFileName = \"/Users/ethanwang/patient-database/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport $ from 'jquery';\nimport DataTable from 'datatables.net-dt';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const handleFileUpload = async event => {\n    event.preventDefault();\n    const file = event.target.files[0];\n    const formData = new FormData();\n    formData.append('excelFile', file);\n    try {\n      const response = await fetch('/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Network response not ok');\n      }\n      const result = await response.json();\n      setData(result);\n      $('#patientTable').DataTable().clear().rows.add(result).draw();\n    } catch (error) {\n      console.error('Error uploading file', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Patient Data Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".xlsx, .xls\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"patientTable\",\n      className: \"display\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n      children: `\n          $(document).ready(function () {\n            $('#patientTable').DataTable({\n              columns: ${JSON.stringify(Object.keys(data[0] || {}))}.map(key => ({ title: key }))\n            });\n          });\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","$","DataTable","jsxDEV","_jsxDEV","App","_s","data","setData","handleFileUpload","event","preventDefault","file","target","files","formData","FormData","append","response","fetch","method","body","ok","Error","result","json","clear","rows","add","draw","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","id","JSON","stringify","Object","keys","_c","$RefreshReg$"],"sources":["/Users/ethanwang/patient-database/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport $ from 'jquery';\nimport DataTable from 'datatables.net-dt';\nimport './App.css';\n\nfunction App() {\n  const [data, setData] = useState([]);\n\n  const handleFileUpload = async (event) => {\n    event.preventDefault();\n    const file = event.target.files[0];\n    const formData = new FormData();\n    formData.append('excelFile', file);\n\n    try {\n      const response = await fetch('/upload', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response not ok');\n      }\n\n      const result = await response.json();\n      setData(result);\n\n      $('#patientTable').DataTable().clear().rows.add(result).draw();\n    } catch (error) {\n      console.error('Error uploading file', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Patient Data Table</h1>\n      <input type=\"file\" accept=\".xlsx, .xls\" onChange={handleFileUpload} />\n      <table id=\"patientTable\" className=\"display\">\n        <thead>\n          <tr>\n            {/* Dynamic Headers */}\n          </tr>\n        </thead>\n        <tbody>\n          {/* DataTable will populate this */}\n        </tbody>\n      </table>\n      <script>\n        {`\n          $(document).ready(function () {\n            $('#patientTable').DataTable({\n              columns: ${JSON.stringify(Object.keys(data[0] || {}))}.map(key => ({ title: key }))\n            });\n          });\n        `}\n      </script>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}