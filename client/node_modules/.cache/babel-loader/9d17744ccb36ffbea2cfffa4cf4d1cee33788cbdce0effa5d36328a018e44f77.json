{"ast":null,"code":"var _jsxFileName = \"/Users/ethanwang/patient-database/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport $ from 'jquery';\nimport DataTable from 'datatables.net-dt';\nimport './App.css';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tableData, setTableData] = useState([{\n    Subject: 'TA310',\n    Age: 50,\n    Sex: 'F',\n    OnsetAge: 26,\n    Handedness: 'R',\n    DomHemi: 'B',\n    Wada: '-',\n    fMRI: 'B',\n    CSM: '',\n    SurgHemi: 'R',\n    SurgType: 'ATL+AH'\n  }, {\n    Subject: 'TA311',\n    Age: 62,\n    Sex: 'F',\n    OnsetAge: 25,\n    Handedness: 'R',\n    DomHemi: 'L',\n    Wada: '-',\n    fMRI: 'L',\n    CSM: '',\n    SurgHemi: 'L',\n    SurgType: 'ATL+AH+Other'\n  }, {\n    Subject: 'TA312',\n    Age: 43,\n    Sex: 'F',\n    OnsetAge: 17,\n    Handedness: 'R',\n    DomHemi: 'R',\n    Wada: 'R',\n    fMRI: 'R',\n    CSM: '',\n    SurgHemi: 'L',\n    SurgType: 'ATL+AH'\n  }, {\n    Subject: 'TA313',\n    Age: 44,\n    Sex: 'F',\n    OnsetAge: '',\n    Handedness: 'R',\n    DomHemi: 'L',\n    Wada: '-',\n    fMRI: 'L',\n    CSM: '',\n    SurgHemi: 'L',\n    SurgType: 'Other'\n  }, {\n    Subject: 'TA314',\n    Age: '',\n    Sex: '',\n    OnsetAge: '',\n    Handedness: '',\n    DomHemi: '',\n    Wada: '',\n    fMRI: '',\n    CSM: '',\n    SurgHemi: '',\n    SurgType: ''\n  }, {\n    Subject: 'TA315'\n  }, {\n    Subject: 'TA316'\n  }, {\n    Subject: 'TA317'\n  }, {\n    Subject: 'TA318'\n  }, {\n    Subject: 'TA319'\n  }, {\n    Subject: 'TA320'\n  }]);\n  const [columns, setColumns] = useState(['Subject', 'Age', 'Sex', 'OnsetAge', 'Handedness', 'DomHemi', 'Wada', 'fMRI', 'CSM', 'SurgHemi', 'SurgType']);\n  useEffect(() => {\n    const table = new DataTable('#example');\n    return () => {\n      table.destroy();\n    };\n  }, [tableData]);\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = e => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, {\n        type: 'array'\n      });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet, {\n        defval: ''\n      });\n      const updatedData = tableData.map(row => {\n        const matchingEntry = jsonData.find(entry => entry.Subject === row.Subject);\n        return matchingEntry ? {\n          ...row,\n          ...matchingEntry\n        } : row;\n      });\n      setTableData(updatedData);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://cdn.datatables.net/2.1.5/css/dataTables.dataTables.css\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n      src: \"https://cdn.datatables.net/2.1.5/js/dataTables.js\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Patient DataTable\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".xlsx, .xls\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"example\",\n      class: \"display\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map((col, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: col\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map((col, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[col]\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8UAxNljJfJAOk0YyyuwQLTJjets=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","$","DataTable","XLSX","jsxDEV","_jsxDEV","App","_s","tableData","setTableData","Subject","Age","Sex","OnsetAge","Handedness","DomHemi","Wada","fMRI","CSM","SurgHemi","SurgType","columns","setColumns","table","destroy","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","data","Uint8Array","result","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","defval","updatedData","map","row","matchingEntry","find","entry","readAsArrayBuffer","className","children","rel","href","fileName","_jsxFileName","lineNumber","columnNumber","src","accept","onChange","id","class","col","index","rowIndex","colIndex","_c","$RefreshReg$"],"sources":["/Users/ethanwang/patient-database/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport $ from 'jquery';\nimport DataTable from 'datatables.net-dt';\nimport './App.css';\nimport * as XLSX from 'xlsx'; \n\nconst App = () => {\n  const [tableData, setTableData] = useState([\n    { Subject: 'TA310', Age: 50, Sex: 'F', OnsetAge: 26, Handedness: 'R', DomHemi: 'B', Wada: '-', fMRI: 'B', CSM: '', SurgHemi: 'R', SurgType: 'ATL+AH'},\n    { Subject: 'TA311', Age: 62, Sex: 'F', OnsetAge: 25, Handedness: 'R', DomHemi: 'L', Wada: '-', fMRI: 'L', CSM: '', SurgHemi: 'L', SurgType: 'ATL+AH+Other'},\n    { Subject: 'TA312', Age: 43, Sex: 'F', OnsetAge: 17, Handedness: 'R', DomHemi: 'R', Wada: 'R', fMRI: 'R', CSM: '', SurgHemi: 'L', SurgType: 'ATL+AH'},\n    { Subject: 'TA313', Age: 44, Sex: 'F', OnsetAge: '', Handedness: 'R', DomHemi: 'L', Wada: '-', fMRI: 'L', CSM: '', SurgHemi: 'L', SurgType: 'Other'},\n    { Subject: 'TA314', Age: '', Sex: '', OnsetAge: '', Handedness: '', DomHemi: '', Wada: '', fMRI: '', CSM: '', SurgHemi: '', SurgType: ''},\n    { Subject: 'TA315'},\n    { Subject: 'TA316'},\n    { Subject: 'TA317'},\n    { Subject: 'TA318'},\n    { Subject: 'TA319'},\n    { Subject: 'TA320'},\n  ]);\n  const [columns, setColumns] = useState(['Subject', 'Age', 'Sex', 'OnsetAge', 'Handedness', 'DomHemi', 'Wada', 'fMRI', 'CSM', 'SurgHemi', 'SurgType']);\n\n  useEffect(() => {\n    const table = new DataTable('#example');\n      \n    return () => {\n      table.destroy();\n    };\n  }, [tableData]);\n  \n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    \n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, { type: 'array' });\n\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n\n      const jsonData = XLSX.utils.sheet_to_json(worksheet, { defval: '' });\n\n      const updatedData = tableData.map((row) => {\n        const matchingEntry = jsonData.find((entry) => entry.Subject === row.Subject);\n\n        return matchingEntry ? {...row, ...matchingEntry} : row;\n      });\n\n      setTableData(updatedData);\n    };\n\n    reader.readAsArrayBuffer(file);\n  };\n\n  return (\n    <div className=\"container\">\n      <link rel=\"stylesheet\" href=\"https://cdn.datatables.net/2.1.5/css/dataTables.dataTables.css\" />\n      <script src=\"https://cdn.datatables.net/2.1.5/js/dataTables.js\"></script>\n      <h1>Patient DataTable</h1>\n\n      <input type=\"file\" accept=\".xlsx, .xls\" onChange={handleFileUpload} />\n        <table id=\"example\" class=\"display\">\n          <thead>\n            <tr>\n              {columns.map((col, index) => (\n                <th key={index}>{col}</th>\n              ))}\n              </tr>\n          </thead>\n          <tbody>\n            {tableData.map((row, rowIndex) => (\n              <tr key={rowIndex}>\n                {columns.map((col, colIndex) => (\n                  <td key={colIndex}>{row[col]}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}