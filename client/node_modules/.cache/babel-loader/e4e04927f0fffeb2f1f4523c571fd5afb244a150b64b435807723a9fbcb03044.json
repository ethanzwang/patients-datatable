{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport * as XLSX from 'xlsx';\nexport const useDataTable = initialData => {\n  _s();\n  const [tableData, setTableData] = useState(initialData);\n  const [editIndex, setEditIndex] = useState(null);\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = e => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, {\n        type: 'array'\n      });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet, {\n        defval: ''\n      });\n      const updatedData = tableData.map(row => {\n        const matchingEntry = jsonData.find(entry => entry.Subject === row.Subject);\n        return matchingEntry ? {\n          ...row,\n          ...matchingEntry\n        } : row;\n      });\n      setTableData(updatedData);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  const handleEditClick = index => {\n    setEditIndex(index);\n  };\n  const handleSaveClick = index => {\n    setEditIndex(null);\n  };\n  const handleCancelClick = () => {\n    setEditIndex(null);\n  };\n  const handleInputChange = (e, index, field) => {\n    const {\n      value\n    } = e.target;\n    const updatedData = [...tableData];\n    updatedData[index][field] = value;\n    setTableData(updatedData);\n  };\n  return {\n    tableData,\n    editIndex,\n    handleFileUpload,\n    handleEditClick,\n    handleSaveClick,\n    handleCancelClick,\n    handleInputChange\n  };\n};\n_s(useDataTable, \"2Ntb3JIbLCsQBdvl9PL3FUtJZ4s=\");","map":{"version":3,"names":["useState","XLSX","useDataTable","initialData","_s","tableData","setTableData","editIndex","setEditIndex","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","data","Uint8Array","result","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","defval","updatedData","map","row","matchingEntry","find","entry","Subject","readAsArrayBuffer","handleEditClick","index","handleSaveClick","handleCancelClick","handleInputChange","field","value"],"sources":["/Users/ethanzwang/Desktop/patients-datatable/client/src/hook/useDataTable.js"],"sourcesContent":["import { useState } from 'react';\nimport * as XLSX from 'xlsx';\n\nexport const useDataTable = (initialData) => {\n    const [tableData, setTableData] = useState(initialData)\n    const [editIndex, setEditIndex] = useState(null);\n\n    const handleFileUpload = (event) => {\n        const file = event.target.files[0];\n        \n        const reader = new FileReader();\n        reader.onload = (e) => {\n          const data = new Uint8Array(e.target.result);\n          const workbook = XLSX.read(data, { type: 'array' });\n    \n          const sheetName = workbook.SheetNames[0];\n          const worksheet = workbook.Sheets[sheetName];\n    \n          const jsonData = XLSX.utils.sheet_to_json(worksheet, { defval: '' });\n    \n          const updatedData = tableData.map((row) => {\n            const matchingEntry = jsonData.find((entry) => entry.Subject === row.Subject);\n    \n            return matchingEntry ? {...row, ...matchingEntry} : row;\n          });\n    \n          setTableData(updatedData);\n        };\n    \n        reader.readAsArrayBuffer(file);\n      };\n    \n      const handleEditClick = (index) => {\n        setEditIndex(index);\n      };\n    \n      const handleSaveClick = (index) => {\n        setEditIndex(null);\n      };\n    \n      const handleCancelClick = () => {\n        setEditIndex(null);\n      };\n    \n      const handleInputChange = (e, index, field) => {\n        const { value } = e.target;\n        const updatedData = [...tableData];\n        updatedData[index][field] = value;\n        setTableData(updatedData);\n      };\n\n      return {\n        tableData,\n        editIndex,\n        handleFileUpload,\n        handleEditClick,\n        handleSaveClick,\n        handleCancelClick,\n        handleInputChange\n      };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,KAAKC,IAAI,MAAM,MAAM;AAE5B,OAAO,MAAMC,YAAY,GAAIC,WAAW,IAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAACG,WAAW,CAAC;EACvD,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMS,gBAAgB,GAAIC,KAAK,IAAK;IAChC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAElC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;MACrB,MAAMC,IAAI,GAAG,IAAIC,UAAU,CAACF,CAAC,CAACL,MAAM,CAACQ,MAAM,CAAC;MAC5C,MAAMC,QAAQ,GAAGpB,IAAI,CAACqB,IAAI,CAACJ,IAAI,EAAE;QAAEK,IAAI,EAAE;MAAQ,CAAC,CAAC;MAEnD,MAAMC,SAAS,GAAGH,QAAQ,CAACI,UAAU,CAAC,CAAC,CAAC;MACxC,MAAMC,SAAS,GAAGL,QAAQ,CAACM,MAAM,CAACH,SAAS,CAAC;MAE5C,MAAMI,QAAQ,GAAG3B,IAAI,CAAC4B,KAAK,CAACC,aAAa,CAACJ,SAAS,EAAE;QAAEK,MAAM,EAAE;MAAG,CAAC,CAAC;MAEpE,MAAMC,WAAW,GAAG3B,SAAS,CAAC4B,GAAG,CAAEC,GAAG,IAAK;QACzC,MAAMC,aAAa,GAAGP,QAAQ,CAACQ,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,OAAO,KAAKJ,GAAG,CAACI,OAAO,CAAC;QAE7E,OAAOH,aAAa,GAAG;UAAC,GAAGD,GAAG;UAAE,GAAGC;QAAa,CAAC,GAAGD,GAAG;MACzD,CAAC,CAAC;MAEF5B,YAAY,CAAC0B,WAAW,CAAC;IAC3B,CAAC;IAEDlB,MAAM,CAACyB,iBAAiB,CAAC5B,IAAI,CAAC;EAChC,CAAC;EAED,MAAM6B,eAAe,GAAIC,KAAK,IAAK;IACjCjC,YAAY,CAACiC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMC,eAAe,GAAID,KAAK,IAAK;IACjCjC,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMmC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BnC,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMoC,iBAAiB,GAAGA,CAAC3B,CAAC,EAAEwB,KAAK,EAAEI,KAAK,KAAK;IAC7C,MAAM;MAAEC;IAAM,CAAC,GAAG7B,CAAC,CAACL,MAAM;IAC1B,MAAMoB,WAAW,GAAG,CAAC,GAAG3B,SAAS,CAAC;IAClC2B,WAAW,CAACS,KAAK,CAAC,CAACI,KAAK,CAAC,GAAGC,KAAK;IACjCxC,YAAY,CAAC0B,WAAW,CAAC;EAC3B,CAAC;EAED,OAAO;IACL3B,SAAS;IACTE,SAAS;IACTE,gBAAgB;IAChB+B,eAAe;IACfE,eAAe;IACfC,iBAAiB;IACjBC;EACF,CAAC;AACP,CAAC;AAACxC,EAAA,CAzDWF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}