{"ast":null,"code":"import $ from 'jquery';\nexport const handleEditRow = table => {\n  const addEditButtons = () => {\n    $('#example tbody tr').each(function () {\n      const $row = $(this);\n\n      // Add Edit button if it doesn't already exist\n      if ($row.find('.edit-btn').length === 0) {\n        $row.append(`\n              <td>\n                <button class=\"edit-btn\">Edit</button>\n              </td>\n            `);\n      }\n    });\n  };\n\n  // Add Edit buttons on table initialization and redrawing\n  table.on('draw', addEditButtons);\n\n  // Initial call to add Edit buttons\n  addEditButtons();\n\n  // Handle Edit button click\n  $('#example').on('click', '.edit-btn', function () {\n    const $row = $(this).closest('tr');\n    const rowData = table.row($row).data(); // Get current data of the row\n\n    // Replace cell contents with input fields for editing\n    $row.find('td').each(function (index) {\n      if (index < rowData.length) {\n        $(this).html(`<input type=\"text\" value=\"${rowData[index]}\">`);\n      }\n    });\n\n    // Replace the Edit button with Save and Cancel buttons\n    $(this).replaceWith(`\n          <button class=\"save-btn\">Save</button>\n          <button class=\"cancel-btn\">Cancel</button>\n        `);\n  });\n\n  // Handle Save button click\n  $('#example').on('click', '.save-btn', function () {\n    const $row = $(this).closest('tr');\n    const newData = [];\n\n    // Collect new values from input fields\n    $row.find('td input').each(function () {\n      newData.push($(this).val());\n    });\n\n    // Update the table row with new data\n    table.row($row).data(newData).draw(false);\n\n    // Remove Save and Cancel buttons, add back Edit button\n    $row.find('.save-btn, .cancel-btn').remove();\n    $row.append('<td><button class=\"edit-btn\">Edit</button></td>');\n  });\n\n  // Handle Cancel button click\n  $('#example').on('click', '.cancel-btn', function () {\n    const $row = $(this).closest('tr');\n    const rowData = table.row($row).data(); // Get the original data of the row\n\n    // Restore the original row data\n    table.row($row).data(rowData).draw(false);\n\n    // Remove Save and Cancel buttons, add back Edit button\n    $row.find('.save-btn, .cancel-btn').remove();\n    $row.append('<td><button class=\"edit-btn\">Edit</button></td>');\n  });\n};","map":{"version":3,"names":["$","handleEditRow","table","addEditButtons","each","$row","find","length","append","on","closest","rowData","row","data","index","html","replaceWith","newData","push","val","draw","remove"],"sources":["/Users/ethanzwang/Desktop/patients-datatable/client/src/components/editRow.js"],"sourcesContent":["import $ from 'jquery';\n\nexport const handleEditRow = (table) => {\n    const addEditButtons = () => {\n        $('#example tbody tr').each(function () {\n          const $row = $(this);\n    \n          // Add Edit button if it doesn't already exist\n          if ($row.find('.edit-btn').length === 0) {\n            $row.append(`\n              <td>\n                <button class=\"edit-btn\">Edit</button>\n              </td>\n            `);\n          }\n        });\n      };\n    \n      // Add Edit buttons on table initialization and redrawing\n      table.on('draw', addEditButtons);\n    \n      // Initial call to add Edit buttons\n      addEditButtons();\n    \n      // Handle Edit button click\n      $('#example').on('click', '.edit-btn', function () {\n        const $row = $(this).closest('tr');\n        const rowData = table.row($row).data(); // Get current data of the row\n    \n        // Replace cell contents with input fields for editing\n        $row.find('td').each(function (index) {\n          if (index < rowData.length) {\n            $(this).html(`<input type=\"text\" value=\"${rowData[index]}\">`);\n          }\n        });\n    \n        // Replace the Edit button with Save and Cancel buttons\n        $(this).replaceWith(`\n          <button class=\"save-btn\">Save</button>\n          <button class=\"cancel-btn\">Cancel</button>\n        `);\n      });\n    \n      // Handle Save button click\n      $('#example').on('click', '.save-btn', function () {\n        const $row = $(this).closest('tr');\n        const newData = [];\n    \n        // Collect new values from input fields\n        $row.find('td input').each(function () {\n          newData.push($(this).val());\n        });\n    \n        // Update the table row with new data\n        table.row($row).data(newData).draw(false);\n    \n        // Remove Save and Cancel buttons, add back Edit button\n        $row.find('.save-btn, .cancel-btn').remove();\n        $row.append('<td><button class=\"edit-btn\">Edit</button></td>');\n      });\n    \n      // Handle Cancel button click\n      $('#example').on('click', '.cancel-btn', function () {\n        const $row = $(this).closest('tr');\n        const rowData = table.row($row).data(); // Get the original data of the row\n    \n        // Restore the original row data\n        table.row($row).data(rowData).draw(false);\n    \n        // Remove Save and Cancel buttons, add back Edit button\n        $row.find('.save-btn, .cancel-btn').remove();\n        $row.append('<td><button class=\"edit-btn\">Edit</button></td>');\n      });\n};"],"mappings":"AAAA,OAAOA,CAAC,MAAM,QAAQ;AAEtB,OAAO,MAAMC,aAAa,GAAIC,KAAK,IAAK;EACpC,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzBH,CAAC,CAAC,mBAAmB,CAAC,CAACI,IAAI,CAAC,YAAY;MACtC,MAAMC,IAAI,GAAGL,CAAC,CAAC,IAAI,CAAC;;MAEpB;MACA,IAAIK,IAAI,CAACC,IAAI,CAAC,WAAW,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;QACvCF,IAAI,CAACG,MAAM,CAAC;AACxB;AACA;AACA;AACA,aAAa,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACAN,KAAK,CAACO,EAAE,CAAC,MAAM,EAAEN,cAAc,CAAC;;EAEhC;EACAA,cAAc,CAAC,CAAC;;EAEhB;EACAH,CAAC,CAAC,UAAU,CAAC,CAACS,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,YAAY;IACjD,MAAMJ,IAAI,GAAGL,CAAC,CAAC,IAAI,CAAC,CAACU,OAAO,CAAC,IAAI,CAAC;IAClC,MAAMC,OAAO,GAAGT,KAAK,CAACU,GAAG,CAACP,IAAI,CAAC,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC;;IAExC;IACAR,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC,CAACF,IAAI,CAAC,UAAUU,KAAK,EAAE;MACpC,IAAIA,KAAK,GAAGH,OAAO,CAACJ,MAAM,EAAE;QAC1BP,CAAC,CAAC,IAAI,CAAC,CAACe,IAAI,CAAC,6BAA6BJ,OAAO,CAACG,KAAK,CAAC,IAAI,CAAC;MAC/D;IACF,CAAC,CAAC;;IAEF;IACAd,CAAC,CAAC,IAAI,CAAC,CAACgB,WAAW,CAAC;AAC5B;AACA;AACA,SAAS,CAAC;EACJ,CAAC,CAAC;;EAEF;EACAhB,CAAC,CAAC,UAAU,CAAC,CAACS,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,YAAY;IACjD,MAAMJ,IAAI,GAAGL,CAAC,CAAC,IAAI,CAAC,CAACU,OAAO,CAAC,IAAI,CAAC;IAClC,MAAMO,OAAO,GAAG,EAAE;;IAElB;IACAZ,IAAI,CAACC,IAAI,CAAC,UAAU,CAAC,CAACF,IAAI,CAAC,YAAY;MACrCa,OAAO,CAACC,IAAI,CAAClB,CAAC,CAAC,IAAI,CAAC,CAACmB,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC;;IAEF;IACAjB,KAAK,CAACU,GAAG,CAACP,IAAI,CAAC,CAACQ,IAAI,CAACI,OAAO,CAAC,CAACG,IAAI,CAAC,KAAK,CAAC;;IAEzC;IACAf,IAAI,CAACC,IAAI,CAAC,wBAAwB,CAAC,CAACe,MAAM,CAAC,CAAC;IAC5ChB,IAAI,CAACG,MAAM,CAAC,iDAAiD,CAAC;EAChE,CAAC,CAAC;;EAEF;EACAR,CAAC,CAAC,UAAU,CAAC,CAACS,EAAE,CAAC,OAAO,EAAE,aAAa,EAAE,YAAY;IACnD,MAAMJ,IAAI,GAAGL,CAAC,CAAC,IAAI,CAAC,CAACU,OAAO,CAAC,IAAI,CAAC;IAClC,MAAMC,OAAO,GAAGT,KAAK,CAACU,GAAG,CAACP,IAAI,CAAC,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC;;IAExC;IACAX,KAAK,CAACU,GAAG,CAACP,IAAI,CAAC,CAACQ,IAAI,CAACF,OAAO,CAAC,CAACS,IAAI,CAAC,KAAK,CAAC;;IAEzC;IACAf,IAAI,CAACC,IAAI,CAAC,wBAAwB,CAAC,CAACe,MAAM,CAAC,CAAC;IAC5ChB,IAAI,CAACG,MAAM,CAAC,iDAAiD,CAAC;EAChE,CAAC,CAAC;AACR,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}